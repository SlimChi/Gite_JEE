Index: src/main/java/fr/cs/gite_jee/bean/GiteBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cs.gite_jee.bean;\r\n\r\nimport fr.cs.gite_jee.dao.DaoFactory;\r\nimport fr.cs.gite_jee.metier.*;\r\nimport fr.cs.gite_jee.service.GiteSearch;\r\nimport fr.cs.gite_jee.service.ServiceGite;\r\nimport jakarta.annotation.PostConstruct;\r\nimport jakarta.enterprise.context.SessionScoped;\r\nimport jakarta.inject.Named;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\n\r\n@Named\r\n@SessionScoped\r\npublic class GiteBean implements Serializable {\r\n\r\n\r\n\r\n    private static ArrayList<Equipement> allEquipements;\r\n    private Equipement equipementSelected;\r\n\r\n    private ArrayList<Gite> allGites;\r\n    private ArrayList<Gite> allGitesSelected;\r\n    private Gite giteSelected;\r\n\r\n    private ServiceGite serviceGite;\r\n\r\n    @PostConstruct\r\n    private void init() {\r\n\r\n\r\n        Equipement equipement = new Equipement();\r\n        equipement.setLibelle(\"Choisir un equipement\");\r\n        equipement.setId(0);\r\n\r\n       allEquipements = DaoFactory.getEquipementDAO().getAll();\r\n       allEquipements.add(0,equipement);\r\n\r\n        GiteSearch giteSearch = new GiteSearch();\r\n        giteSearch.setNomDuGite(\"\");\r\n        Equipement e = new Equipement();\r\n        e.setId(0);\r\n        giteSearch.setEquipement(e);\r\n\r\n        TypeEquipement typeEquipement = new TypeEquipement();\r\n        typeEquipement.setId(0);\r\n        giteSearch.setTypeEquipement(typeEquipement);\r\n\r\n        Region region = new Region();\r\n        region.setId(0);\r\n        giteSearch.setRegion(region);\r\n\r\n        Ville ville = new Ville();\r\n        ville.setCodeInsee(\"\");\r\n        giteSearch.setVille(ville);\r\n\r\n        Departement departement = new Departement();\r\n        departement.setCodeInseeDept(\"\");\r\n        giteSearch.setDepartement(departement);\r\n\r\n        allGites= DaoFactory.getGiteDAO().getLike(giteSearch);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    public ArrayList<Equipement> getAllEquipements() {\r\n        return allEquipements;\r\n    }\r\n\r\n    public static void setAllEquipements(ArrayList<Equipement> allEquipements) {\r\n        GiteBean.allEquipements = allEquipements;\r\n    }\r\n\r\n    public Equipement getEquipementSelected() {\r\n        return equipementSelected;\r\n    }\r\n\r\n    public void setEquipementSelected(Equipement equipementSelected) {\r\n        this.equipementSelected = equipementSelected;\r\n    }\r\n\r\n    public ArrayList<Gite> getAllGites() {\r\n        return allGites;\r\n    }\r\n\r\n    public void setAllGites(ArrayList<Gite> allGites) {\r\n        this.allGites = allGites;\r\n    }\r\n\r\n    public Gite getGiteSelected() {\r\n        return giteSelected;\r\n    }\r\n\r\n    public void setGiteSelected(Gite giteSelected) {\r\n        this.giteSelected = giteSelected;\r\n    }\r\n\r\n    public ArrayList<Gite> getAllGitesSelected() {\r\n        return allGitesSelected;\r\n    }\r\n\r\n    public void setAllGitesSelected(ArrayList<Gite> allGitesSelected) {\r\n        this.allGitesSelected = allGitesSelected;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cs/gite_jee/bean/GiteBean.java b/src/main/java/fr/cs/gite_jee/bean/GiteBean.java
--- a/src/main/java/fr/cs/gite_jee/bean/GiteBean.java	(revision 5d700e698d915fad3b4112e8183073e746fa8777)
+++ b/src/main/java/fr/cs/gite_jee/bean/GiteBean.java	(date 1668089626218)
@@ -16,10 +16,10 @@
 public class GiteBean implements Serializable {
 
 
-
     private static ArrayList<Equipement> allEquipements;
     private Equipement equipementSelected;
 
+
     private ArrayList<Gite> allGites;
     private ArrayList<Gite> allGitesSelected;
     private Gite giteSelected;
@@ -34,9 +34,11 @@
         equipement.setLibelle("Choisir un equipement");
         equipement.setId(0);
 
-       allEquipements = DaoFactory.getEquipementDAO().getAll();
-       allEquipements.add(0,equipement);
+        allEquipements = DaoFactory.getEquipementDAO().getAll();
+        allEquipements.add(0, equipement);
 
+
+
         GiteSearch giteSearch = new GiteSearch();
         giteSearch.setNomDuGite("");
         Equipement e = new Equipement();
@@ -59,9 +61,13 @@
         departement.setCodeInseeDept("");
         giteSearch.setDepartement(departement);
 
-        allGites= DaoFactory.getGiteDAO().getLike(giteSearch);
+        allGites = DaoFactory.getGiteDAO().getLike(giteSearch);
 
 
+    }
+
+    public void filtrer(){
+
 
 
     }
@@ -106,4 +112,6 @@
     public void setAllGitesSelected(ArrayList<Gite> allGitesSelected) {
         this.allGitesSelected = allGitesSelected;
     }
+
+
 }
Index: src/main/java/fr/cs/gite_jee/dao/GiteDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cs.gite_jee.dao;\r\n\r\n\r\nimport fr.cs.gite_jee.metier.*;\r\nimport fr.cs.gite_jee.service.GiteSearch;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\n\r\npublic class GiteDAO extends DAO<Gite, GiteSearch> {\r\n    protected GiteDAO(Connection connexion) {\r\n        super(connexion);\r\n    }\r\n\r\n    @Override\r\n    public Gite getByID(int id) {\r\n\r\n        Gite gite = new Gite();\r\n        ResultSet rs;\r\n\r\n        try {\r\n\r\n            PreparedStatement pStmt = connexion\r\n                    .prepareStatement(\"SELECT * FROM GITE WHERE ID_GITE = ?\");\r\n            // Determine the column set column\r\n\r\n            pStmt.setInt(1, id);\r\n            rs = pStmt.executeQuery();\r\n\r\n            while (rs.next()) {\r\n\r\n\r\n                gite.setId(rs.getInt(1));\r\n                gite.setNom(rs.getString(2));\r\n                gite.setNombreChambre(rs.getInt(3));\r\n                gite.setNombreCouchage(rs.getInt(4));\r\n                gite.setSurfaceHabitable(rs.getInt(5));\r\n                gite.setAdresse(rs.getString(6));\r\n                gite.setIdPersonne(rs.getInt(7));\r\n                gite.setIdPersonneGerant(rs.getInt(8));\r\n                gite.setCodeInseeDept(rs.getString(9));\r\n                gite.setCodeInsee(rs.getString(10));\r\n\r\n\r\n            }\r\n            rs.close();\r\n        }\r\n\r\n        // Handle any errors that may have occurred.\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return gite;\r\n    }\r\n\r\n    @Override\r\n    public ArrayList<Gite> getAll() {\r\n        return null;\r\n    }\r\n\r\n\r\n    @Override\r\n    public ArrayList<Gite> getLike(GiteSearch giteSearch) {\r\n\r\n        ResultSet rs;\r\n        ArrayList<Gite> liste = new ArrayList<>();\r\n        String procedureStockee = \"{call SP_GITE_QBE(?,?,?,?,?,?)}\";\r\n\r\n        try (CallableStatement cStmt = this.connexion.prepareCall(procedureStockee)) {\r\n\r\n\r\n\r\n            cStmt.setString(1, giteSearch.getNomDuGite());\r\n            cStmt.setInt(2, giteSearch.getEquipement().getId());\r\n            cStmt.setInt(3, giteSearch.getTypeEquipement().getId());\r\n\r\n            cStmt.setInt(4, giteSearch.getRegion().getId());\r\n            cStmt.setString(5, giteSearch.getDepartement().getCodeInseeDept());\r\n            cStmt.setString(6, giteSearch.getVille().getCodeInsee());\r\n\r\n\r\n            cStmt.execute();\r\n            rs = cStmt.getResultSet();\r\n\r\n            while (rs.next()) {\r\n\r\n                Gite gite = new Gite();\r\n\r\n                gite.setId(rs.getInt(1));\r\n                gite.setNom(rs.getString(2));\r\n                gite.setNombreCouchage(rs.getInt(3));\r\n                gite.setSurfaceHabitable(rs.getInt(4));\r\n                gite.setCodeInsee(rs.getString(5));\r\n                gite.setCodeInseeDept(rs.getString(6));\r\n\r\n                Ville ville = new Ville();\r\n                ville.setCodeInsee(rs.getString(5));\r\n                ville.setCodeInseeDept(rs.getString(6));\r\n                ville.setNom(rs.getString(7));\r\n                ville.setLatitude(rs.getFloat(8));\r\n                ville.setLongitude(rs.getFloat(9));\r\n\r\n                Departement departement = new Departement();\r\n                departement.setNomDepartement(rs.getString(10));\r\n                departement.setCodeInseeDept(rs.getString(6));\r\n\r\n                Region region = new Region();\r\n                region.setId(rs.getInt(11));\r\n                region.setNom(rs.getString(12));\r\n                departement.setRegion(region);\r\n                ville.setDepartement(departement);\r\n                gite.setVille(ville);\r\n\r\n                liste.add(gite);\r\n\r\n            }\r\n            rs.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return liste;\r\n    }\r\n\r\n    @Override\r\n    public boolean insert(Gite gite) {\r\n        String Statement = \"insert into GITE (NOM_GITE,NBR_CHAMBRE,NBR_COUCHAGE,SURFACE_HABITABLE,ADRESSE_GITE,ID_PERSONNE,ID_PERSONNE_GERANT_GITE,CODE_INSEE_DEPT,CODE_INSEE) values (?,?,?,?,?,?,?,?,?)\";\r\n\r\n        try (PreparedStatement pStmt = this.connexion.prepareStatement(Statement)) {\r\n\r\n\r\n            System.out.println(gite.getCodeInseeDept());\r\n            System.out.println(gite.getCodeInsee());\r\n\r\n\r\n            pStmt.setString(1, gite.getNom());\r\n            pStmt.setInt(2, gite.getNombreChambre());\r\n            pStmt.setInt(3, gite.getNombreCouchage());\r\n            pStmt.setInt(4, gite.getSurfaceHabitable());\r\n            pStmt.setString(5, gite.getAdresse());\r\n            pStmt.setInt(6, gite.getIdPersonne());\r\n            pStmt.setInt(7, gite.getIdPersonneGerant());\r\n            pStmt.setString(8, gite.getCodeInseeDept());\r\n            pStmt.setString(9, gite.getCodeInsee());\r\n\r\n            pStmt.execute();\r\n            return true;\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            return false;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean update(Gite gite) {\r\n        String Statement = \"UPDATE GITE SET NOM_GITE =?, NBR_CHAMBRE=?, NBR_COUCHAGE=?,SURFACE_HABITABLE=?,ADRESSE_GITE =?, ID_PERSONNE =?,ID_PERSONNE_GERANT_GITE=?,CODE_INSEE_DEPT=?, CODE_INSEE =? WHERE ID_GITE =?\";\r\n        try (PreparedStatement pStmt = this.connexion.prepareStatement(Statement)) {\r\n            pStmt.setString(1, gite.getNom());\r\n            pStmt.setInt(2, gite.getNombreChambre());\r\n            pStmt.setInt(3, gite.getNombreCouchage());\r\n            pStmt.setInt(4, gite.getSurfaceHabitable());\r\n            pStmt.setString(5, gite.getAdresse());\r\n            pStmt.setInt(6, gite.getIdPersonne());\r\n            pStmt.setInt(7, gite.getIdPersonneGerant());\r\n            pStmt.setString(8, gite.getCodeInseeDept());\r\n            pStmt.setString(9, gite.getCodeInsee());\r\n            pStmt.setInt(10, gite.getId());\r\n\r\n            pStmt.execute();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    public ArrayList getAllEssential() {\r\n        ArrayList<Gite> liste = new ArrayList<>();\r\n        try (Statement stmt = connexion.createStatement()) {\r\n\r\n            // Determine the column set column\r\n\r\n            String strCmd = \"select G.ID_GITE,G.NOM_GITE,G.NBR_COUCHAGE,V.NOM_VILLE,D.NOM_DEPARTEMENT from GITE as G\\n\" +\r\n                    \"join VILLE as V on V.CODE_INSEE = G.CODE_INSEE and V.CODE_INSEE_DEPT = G.CODE_INSEE_DEPT\\n\" +\r\n                    \"join DEPARTEMENT as D on D.CODE_INSEE_DEPT = V.CODE_INSEE_DEPT\";\r\n\r\n            ResultSet rs = stmt.executeQuery(strCmd);\r\n\r\n            while (rs.next()) {\r\n\r\n                Departement departement = new Departement();\r\n                Ville ville = new Ville();\r\n                Gite gite = new Gite();\r\n\r\n                departement.setNomDepartement(rs.getString(5));\r\n                ville.setNom(rs.getString(4));\r\n                ville.setDepartement(departement);\r\n\r\n                gite.setVille(ville);\r\n                gite.setId(rs.getInt(1));\r\n                gite.setNom(rs.getString(2));\r\n                gite.setNombreCouchage(rs.getInt(3));\r\n\r\n                liste.add(gite);\r\n\r\n            }\r\n            rs.close();\r\n\r\n        }\r\n        // Handle any errors that may have occurred.\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return liste;\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean delete(Gite gite) {\r\n        String Statement = \"DELETE FROM GITE WHERE ID_GITE =? \";\r\n        try (PreparedStatement pStmt = this.connexion.prepareStatement(Statement)) {\r\n            pStmt.setInt(1, gite.getId());\r\n            pStmt.execute();\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public boolean deleteGiteTransaction(Gite gite) throws SQLException {\r\n        try {\r\n            connexion.setAutoCommit(false);\r\n\r\n            boolean a = DaoFactory.getSaisonGiteDAO().deletebyIdGite(gite.getId());\r\n            boolean b = DaoFactory.getEquipementGiteDAO().deleteByIdGite(gite.getId());\r\n            boolean c = delete(gite);\r\n\r\n            if (!a || !b || !c)\r\n                throw new SQLException(\"LE PLAN A ECHOUER\");\r\n            connexion.commit();\r\n\r\n        } catch (SQLException e) {\r\n\r\n            e.printStackTrace();\r\n\r\n            connexion.rollback();\r\n            connexion.setAutoCommit(true);\r\n\r\n            return false;\r\n        }\r\n\r\n        connexion.setAutoCommit(true);\r\n        return true;\r\n    }\r\n\r\n    public boolean forEquipement(Gite gite) {\r\n        for (EquipementGite equipementGite : gite.getEquipementGites()) {\r\n\r\n            boolean equipementExist =DaoFactory.getEquipementDAO().getEquipmentById(equipementGite.getEquipement().getId());\r\n           // System.out.println(\"exist : \"+equipementExist);\r\n\r\n            if (!equipementExist) {\r\n\r\n                DaoFactory.getEquipementDAO().insert(equipementGite.getEquipement());\r\n            }\r\n\r\n\r\n            boolean test = DaoFactory.getEquipementGiteDAO().insert(equipementGite);\r\n            if (!test) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    public boolean ajoutDunEquipement(Equipement equipement){\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    public boolean insertEquipementGiteTransaction(Gite gite) throws SQLException {\r\n\r\n        try {\r\n            connexion.setAutoCommit(false);\r\n            boolean a = DaoFactory.getEquipementGiteDAO().deleteByIdGite(gite.getId());\r\n\r\n            if (!a || !forEquipement(gite))\r\n                throw new SQLException(\"LE PLAN A ECHOUER\");\r\n            connexion.commit();\r\n\r\n\r\n        } catch (SQLException e) {\r\n\r\n            e.printStackTrace();\r\n\r\n            connexion.rollback();\r\n            connexion.setAutoCommit(true);\r\n\r\n            return false;\r\n        }\r\n\r\n        connexion.setAutoCommit(true);\r\n        return true;\r\n    }\r\n\r\n     /*  System.out.println(\"ID du gite : \"+gite.getId());\r\n       //vrai ou faux = DaoFactory.getEquipementGiteDAO().deleteByIdGite(gite.getId());\r\n        for(EquipementGite equipementGite : gite.getEquipementGites()){\r\n           System.out.println(\" LE ID : \"+equipementGite.getIdEquipement()+\" libelle: \"+equipementGite.getEquipement().getLibelle()+\" prix: \"+\r\n                    equipementGite.getPrix());\r\n           //  vrai ou faux = DaoFactory.getEquipementGiteDAO().insert(equipementGite);\r\n\r\n        }*/\r\n\r\n\r\n    public int getMaxIdGite() {\r\n\r\n\r\n        try (Statement stmt = connexion.createStatement()) {\r\n\r\n            // Determine the column set column\r\n\r\n            String strCmd = \"select max(id_gite) from gite\";\r\n\r\n            ResultSet rs = stmt.executeQuery(strCmd);\r\n\r\n            while (rs.next()) {\r\n\r\n\r\n                System.out.println(rs.getInt(1));\r\n                return rs.getInt(1);\r\n\r\n\r\n            }\r\n            rs.close();\r\n\r\n        }\r\n        // Handle any errors that may have occurred.\r\n        catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return 0;\r\n\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cs/gite_jee/dao/GiteDAO.java b/src/main/java/fr/cs/gite_jee/dao/GiteDAO.java
--- a/src/main/java/fr/cs/gite_jee/dao/GiteDAO.java	(revision 5d700e698d915fad3b4112e8183073e746fa8777)
+++ b/src/main/java/fr/cs/gite_jee/dao/GiteDAO.java	(date 1668091780943)
@@ -70,6 +70,7 @@
 
 
 
+
             cStmt.setString(1, giteSearch.getNomDuGite());
             cStmt.setInt(2, giteSearch.getEquipement().getId());
             cStmt.setInt(3, giteSearch.getTypeEquipement().getId());
Index: src/main/webapp/faces/index.xhtml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\r\n      xmlns:h=\"http://xmlns.jcp.org/jsf/html\"\r\n      xmlns:ui=\"http://xmlns.jcp.org/jsf/facelets\"\r\n      xmlns:f=\"http://xmlns.jcp.org/jsf/core\"\r\n      xmlns:p=\"http://primefaces.org/ui\">\r\n<f:view>\r\n    <h:body>\r\n        <ui:composition template=\"templates/templateJSF.xhtml\"\r\n                        xmlns:ui=\"http://xmlns.jcp.org/jsf/facelets\"\r\n                        xmlns:h=\"http://xmlns.jcp.org/jsf/html\">\r\n            <ui:define name=\"contenu\">\r\n                <div class=\"card crud-demo\">\r\n                    <h:form id=\"form\" style=\"width: 85%; background-color: beige\">\r\n                        <p:growl id=\"messages\" showDetail=\"true\"/>\r\n\r\n\r\n                        <p:dataTable id=\"gites\" widgetVar=\"dtGites\" var=\"gite\" value=\"#{giteBean.allGites}\"\r\n                                     showGridlines=\"true\" stripedRows=\"true\"\r\n                                     reflow=\"true\" styleClass=\"products-table\"\r\n                                     selection=\"#{giteBean.allGitesSelected}\" stickyHeader=\"true\"\r\n                                     stickyTopAt=\".layout-topbar\"\r\n                                     rowKey=\"#{giteBean.giteSelected.id}\" paginator=\"true\" rows=\"25\"\r\n                                     rowSelectMode=\"add\" paginatorPosition=\"bottom\">\r\n                            <f:facet name=\"header\">\r\n                                <div class=\"products-table-header\">\r\n                                    <span style=\"font-weight: bold\">Rechercher</span>\r\n                                    <span class=\"filter-container ui-input-icon-left\" style=\"margin-right: 10px\"> <i\r\n                                            class=\"pi pi-search\"></i>\r\n                             <p:inputText id=\"globalFilter\" onkeyup=\"PF('dtArticles').filter()\" placeholder=\"Search\"/>\r\n                            </span>\r\n\r\n                                    <div style=\"float: right\">\r\n                                        <p:splitButton value=\"Filtrer\" action=\"#{sdbmBean.filtrer}\" update=\"gites\"\r\n                                                       icon=\"pi pi-check-circle\">\r\n                                            <p:menuitem value=\"Reset\" action=\"#{sdbmBean.reset}\" update=\"gites\"\r\n                                                        icon=\"pi pi-refresh\"/>\r\n                                        </p:splitButton>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style=\"margin-top: 15px\">\r\n                                    <p:commandButton value=\"Ajouter\" class=\"ui-button-yellow rounded-button\"\r\n                                                     icon=\"pi pi-plus-circle\"\r\n                                                     actionListener=\"#{giteBean.NouveauArticle}\"\r\n                                                     update=\":dialogs:manage-product-content\"\r\n                                                     oncomplete=\"PF('manageProductDialog').show()\"\r\n                                                     styleClass=\"ui-button rounded-button\" style=\"margin-right: .5rem\">\r\n                                        <p:resetInput target=\":dialogs:manage-product-content\"/>\r\n                                    </p:commandButton>\r\n                                </div>\r\n\r\n\r\n                            </f:facet>\r\n                            <p:column selectionMode=\"multiple\" style=\"width:16px;text-align:center\"/>\r\n\r\n                            <p:column headerText=\"Article Id\" sortBy=\"#{gite.id}\" filterBy=\"#{gite.id}\">\r\n                                <h:outputText value=\"#{gite.id}\"/>\r\n                            </p:column>\r\n                            <p:column headerText=\"Nom\" sortBy=\"#{gite.nom}\" filterBy=\"#{gite.nom}\">\r\n                                <h:outputText value=\"#{gite.nom}\"/>\r\n                            </p:column>\r\n                            <p:column headerText=\"Ville\" sortBy=\"#{gite.ville.nom}\" filterBy=\"#{gite.ville.nom}\">\r\n                                <h:outputText value=\"#{gite.ville.nom}\"/>\r\n                            </p:column>\r\n                            <p:column headerText=\"Département\" sortBy=\"#{gite.ville.departement.nomDepartement}\" filterBy=\"#{gite.ville.departement.nomDepartement}\">\r\n                                <h:outputText value=\"#{gite.ville.departement.nomDepartement}\"/>\r\n                            </p:column>\r\n                            <p:column headerText=\"Nombre de couchage\" sortBy=\"#{gite.nombreCouchage}\" filterBy=\"#{gite.nombreCouchage}\">\r\n                                <h:outputText value=\"#{gite.nombreCouchage}\"/>\r\n                            </p:column>\r\n\r\n\r\n\r\n                            <p:column>\r\n                                <div style=\"float: right\">\r\n                                    <p:commandButton icon=\"pi pi-pencil\" update=\":dialogs:manage-product-content\"\r\n                                                     oncomplete=\"PF('manageProductDialog').show()\"\r\n                                                     styleClass=\"edit-button rounded-button ui-button-success\"\r\n                                                     process=\"@this\">\r\n                                        <f:setPropertyActionListener value=\"#{article}\"\r\n                                                                     target=\"#{giteBean.giteSelected}\"/>\r\n                                        <p:resetInput target=\":dialogs:manage-product-content\"/>\r\n                                    </p:commandButton></div>\r\n\r\n                                <p:commandButton class=\"ui-button-danger rounded-button\" icon=\"pi pi-trash\"\r\n                                                 style=\"margin-left: 15px\" process=\"@this\"\r\n                                                 oncomplete=\"PF('deleteProductDialog').show()\">\r\n                                    <f:setPropertyActionListener value=\"#{gite}\"\r\n                                                                 target=\"#{giteBean.giteSelected}\"/>\r\n\r\n                                </p:commandButton>\r\n                            </p:column>\r\n\r\n                        </p:dataTable>\r\n\r\n\r\n                    </h:form>\r\n                    <h:form id=\"dialogs\">\r\n                        <p:dialog header=\"Détails de l'article\" showEffect=\"fade\" modal=\"true\"\r\n                                  widgetVar=\"manageProductDialog\"\r\n                                  responsive=\"true\">\r\n                            <p:outputPanel id=\"manage-product-content\" class=\"ui-fluid\">\r\n                                <p:outputPanel rendered=\"#{not empty giteBean.giteSelected}\">\r\n\r\n                                    <div class=\"field\">\r\n                                        <p:outputLabel for=\"name\">Gite</p:outputLabel>\r\n                                        <p:inputText id=\"name\" value=\"#{giteBean.giteSelected.nom}\"\r\n                                                     required=\"true\"/>\r\n                                    </div>\r\n\r\n                                 \r\n                                    <div class=\"formgrid grid\">\r\n                                        <div class=\"field col\">\r\n                                            <p:outputLabel for=\"price\">Prix</p:outputLabel>\r\n                                            <p:inputNumber id=\"price\" value=\"#{sdbmBean.articleSelected.prixAchat}\"\r\n                                                           symbol=\" €\"\r\n                                                           symbolPosition=\"s\" decimalSeparator=\".\"\r\n                                                           thousandSeparator=\",\"/>\r\n                                        </div>\r\n                                        <div class=\"field col\">\r\n                                            <p:outputLabel for=\"quantity\">Stock</p:outputLabel>\r\n                                            <p:spinner id=\"quantity\" min=\"0\"\r\n                                                       value=\"#{sdbmBean.articleSelected.stock}\"/>\r\n                                        </div>\r\n                                        <div style=\"margin-top: 15px\">\r\n                                            <p:selectOneMenu id=\"couleur\" value=\"#{sdbmBean.articleSelected.couleur}\"\r\n                                                             dynamic=\"true\">\r\n                                                <f:selectItems value=\"#{sdbmBean.allCouleur}\"/>\r\n\r\n                                            </p:selectOneMenu>\r\n                                        </div>\r\n                                        <div class=\"field col\">\r\n                                            <p:outputLabel for=\"titrage\">Titrage</p:outputLabel>\r\n                                            <p:spinner id=\"titrage\" min=\"0.5\" max=\"26\"\r\n                                                       value=\"#{sdbmBean.articleSelected.titrage}\"/>\r\n                                        </div>\r\n                                        <div style=\"margin-top: 15px\">\r\n                                            <p:selectOneMenu id=\"marque\" value=\"#{sdbmBean.articleSelected.marque}\"\r\n                                                             dynamic=\"true\">\r\n                                                <f:selectItems value=\"#{sdbmBean.allMarques}\"/>\r\n\r\n                                            </p:selectOneMenu>\r\n                                        </div>\r\n                                        <div style=\"margin-top: 15px\">\r\n                                            <p:selectOneMenu id=\"type\" value=\"#{sdbmBean.articleSelected.typeBiere}\"\r\n                                                             dynamic=\"true\">\r\n                                                <f:selectItems value=\"#{sdbmBean.allTypeBiere}\"/>\r\n\r\n                                            </p:selectOneMenu>\r\n                                        </div>\r\n                                    </div>\r\n                                </p:outputPanel>\r\n                            </p:outputPanel>\r\n\r\n                            <f:facet name=\"footer\">\r\n                                <p:commandButton value=\"Save\" icon=\"pi pi-check\"\r\n                                                 actionListener=\"#{sdbmBean.saveArticle}\"\r\n                                                 update=\"manage-product-content\"\r\n                                                 process=\"manage-product-content @this\"/>\r\n                                <p:commandButton value=\"Cancel\" icon=\"pi pi-times\"\r\n                                                 onclick=\"PF('manageProductDialog').hide()\"\r\n                                                 class=\"ui-button-secondary\" type=\"button\"/>\r\n                            </f:facet>\r\n                        </p:dialog>\r\n\r\n                        <p:confirmDialog widgetVar=\"deleteProductDialog\" showEffect=\"fade\" width=\"300\"\r\n                                         message=\"Delete the product?\" header=\"Confirm\" severity=\"warn\">\r\n                            <p:commandButton value=\"Yes\" icon=\"pi pi-check\" actionListener=\"#{sdbmBean.deleteArticle}\"\r\n                                             process=\"@this\"\r\n                                             oncomplete=\"PF('deleteProductDialog').hide()\"/>\r\n                            <p:commandButton value=\"No\" type=\"button\" styleClass=\"ui-button-secondary\"\r\n                                             icon=\"pi pi-times\"\r\n                                             onclick=\"PF('deleteProductDialog').hide()\"/>\r\n                        </p:confirmDialog>\r\n\r\n\r\n                    </h:form>\r\n                </div>\r\n            </ui:define>\r\n\r\n        </ui:composition>\r\n    </h:body>\r\n</f:view>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/faces/index.xhtml b/src/main/webapp/faces/index.xhtml
--- a/src/main/webapp/faces/index.xhtml	(revision 5d700e698d915fad3b4112e8183073e746fa8777)
+++ b/src/main/webapp/faces/index.xhtml	(date 1668083532177)
@@ -29,11 +29,17 @@
                                     <span style="font-weight: bold">Rechercher</span>
                                     <span class="filter-container ui-input-icon-left" style="margin-right: 10px"> <i
                                             class="pi pi-search"></i>
+
+
                              <p:inputText id="globalFilter" onkeyup="PF('dtArticles').filter()" placeholder="Search"/>
                             </span>
+                                    <p:selectOneMenu id="selectMenuEquipement" value="#{giteBean.equipementSelected}" dynamic="true">
+                                        <f:selectItems value="#{giteBean.allEquipements}"/>
+                                        <f:converter converterId="equipementConverter"/>
+                                    </p:selectOneMenu>
 
                                     <div style="float: right">
-                                        <p:splitButton value="Filtrer" action="#{sdbmBean.filtrer}" update="gites"
+                                        <p:splitButton value="Filtrer" action="#{giteBean.filtrer}" update="gites"
                                                        icon="pi pi-check-circle">
                                             <p:menuitem value="Reset" action="#{sdbmBean.reset}" update="gites"
                                                         icon="pi pi-refresh"/>
Index: .idea/sonarlint/issuestore/index.pb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/sonarlint/issuestore/index.pb b/.idea/sonarlint/issuestore/index.pb
--- a/.idea/sonarlint/issuestore/index.pb	(revision 5d700e698d915fad3b4112e8183073e746fa8777)
+++ b/.idea/sonarlint/issuestore/index.pb	(date 1669100531670)
@@ -1,0 +1,3 @@
+
+7
+pom.xml,4\4\442292b8a7efeabbe4cc176709b833b1792140ec
\ No newline at end of file
